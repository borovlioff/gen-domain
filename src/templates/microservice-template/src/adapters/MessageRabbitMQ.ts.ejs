import amqp from 'amqplib';

export class MessageRabbitMQAdapter {
  private connection: amqp.Connection;
  private channel: amqp.Channel;

  async connect(url: string): Promise<void> {
    this.connection = await amqp.connect(url);
    this.channel = await this.connection.createChannel();
  }

  publish(queue: string, message: any): void {
    this.channel.assertQueue(queue, { durable: false });
    this.channel.sendToQueue(queue, Buffer.from(JSON.stringify(message)));
  }

  subscribe(queue: string, handler: (message: any) => void): void {
    this.channel.assertQueue(queue, { durable: false });
    this.channel.consume(queue, (msg) => {
      if (msg) {
        handler(JSON.parse(msg.content.toString()));
        this.channel.ack(msg);
      }
    });
  }
}